{ 1, 17, sqrt(1 + 1/(2.*S(ssp)))},
{ 2, 18, (3 + 2*ISO(iip))/(sqrt(6)*sqrt(((1 + ISO(iip))*(3 + 2*ISO(iip))*S(ssp))/(1 + 2*S(ssp))))},
{ 3, 19, (2 + ISO(iip))/(sqrt(6)*sqrt(((1 + ISO(iip))*(2 + ISO(iip))*S(ssp))/(1 + 2*S(ssp))))},
{ 5, 29, sqrt(1 + 1/(2.*S(ssp)))},
{ 6, 30, (3 + 2*ISO(iip))/(2.*sqrt(2)*sqrt(((1 + ISO(iip))*(3 + 2*ISO(iip))*S(ssp))/(1 + 2*S(ssp))))},
{ 8, 31, sqrt(1 + 1/S(ssp))/sqrt(2)},
{ 8, 47, -(1/sqrt(2))},
{ 9, 32, sqrt(((1 + ISO(iip))*(3 + 2*ISO(iip))*(1 + S(ssp)))/S(ssp))/(2.*sqrt(2)*(1 + ISO(iip)))},
{ 9, 48, (-3 - 2*ISO(iip))/(2.*sqrt(6 + 10*ISO(iip) + 4*Power(ISO(iip),2)))},
{ 11, 35, sqrt(1 + 1/(2.*S(ssp)))},
{ 12, 36, (3 + 2*ISO(iip))/(2.*sqrt(2)*sqrt(((1 + ISO(iip))*(3 + 2*ISO(iip))*S(ssp))/(1 + 2*S(ssp))))},
{ 14, 37, sqrt(1 + 1/S(ssp))/sqrt(2)},
{ 14, 49, -(1/sqrt(2))},
{ 15, 38, sqrt(((1 + ISO(iip))*(3 + 2*ISO(iip))*(1 + S(ssp)))/S(ssp))/(2.*sqrt(2)*(1 + ISO(iip)))},
{ 15, 50, (-3 - 2*ISO(iip))/(2.*sqrt(6 + 10*ISO(iip) + 4*Power(ISO(iip),2)))},
{ 20, 2, (Power(-1,NN)*sqrt(-1 + ISO(iip) + 2*Power(ISO(iip),2)))/(sqrt(6)*(1 + ISO(iip)))},
{ 20, 41, -(1/sqrt(6))},
{ 20, 45, -(1/sqrt(2))},
{ 21, 3, (Power(-1,NN)*sqrt(0.6666666666666666)*ISO(iip))/sqrt(ISO(iip)*(1 + ISO(iip)))},
{ 21, 42, -0.5*sqrt(2 + 1/(1 + ISO(iip)))/sqrt(6)},
{ 21, 46, (-3 - 2*ISO(iip))/(2.*sqrt(6 + 10*ISO(iip) + 4*Power(ISO(iip),2)))},
{ 22, 4, (Power(-1,NN)*(5*sqrt((1 + ISO(iip))*(1 + 2*ISO(iip))*S(ssp)) + 2*ISO(iip)*sqrt((1 + ISO(iip))*(1 + 2*ISO(iip))*S(ssp)) + sqrt((S(ssp) + 2*ISO(iip)*S(ssp))/(1 + ISO(iip)))))/(sqrt(2)*(2 + ISO(iip))*(3 + 2*ISO(iip))*sqrt(S(ssp)))},
{ 23, 51, sqrt(1 + 1/(2.*S(ssp)))},
{ 25, 52, sqrt(0.6666666666666666)*sqrt(1 + 1/S(ssp))},
{ 25, 63, -(sqrt(2 - 1/S(ssp))/sqrt(6))},
{ 27, 53, sqrt(0.3333333333333333 + 1/(2.*S(ssp)))},
{ 27, 64, -sqrt(0.6666666666666666)},
{ 31, 6, (Power(-1,NN)*ISO(iip)*(-1 + 2*S(ssp)))/(2.*sqrt(2)*sqrt(ISO(iip)*(1 + ISO(iip))*S(ssp)*(-1 + 2*S(ssp))))},
{ 31, 57, -0.5*sqrt(1 - 1/(2.*S(ssp)))},
{ 32, 7, (Power(-1,NN)*sqrt(0.5 + S(ssp))*(-1 + 2*S(ssp))*(2*sqrt(-(((1 + ISO(iip))*(1 + 2*ISO(iip)))/(S(ssp) - 4*Power(S(ssp),3)))) + sqrt((1 + 2*ISO(iip))/((1 + ISO(iip))*(-S(ssp) + 4*Power(S(ssp),3))))))/(2.*(3 + 2*ISO(iip)))},
{ 33, 9, (Power(-1,NN)*ISO(iip))/(sqrt(2)*sqrt(ISO(iip)*(1 + ISO(iip))))},
{ 33, 58, -(1/sqrt(2))},
{ 34, 10, Power(-1,NN)/sqrt(1 + 1/(1 + 2*ISO(iip)))},
{ 37, 12, (Power(-1,NN)*ISO(iip)*(-1 + 2*S(ssp)))/(2.*sqrt(2)*sqrt(ISO(iip)*(1 + ISO(iip))*S(ssp)*(-1 + 2*S(ssp))))},
{ 37, 55, -0.5*sqrt(1 - 1/(2.*S(ssp)))},
{ 38, 13, (Power(-1,NN)*sqrt(0.5 + S(ssp))*(-1 + 2*S(ssp))*(2*sqrt(-(((1 + ISO(iip))*(1 + 2*ISO(iip)))/(S(ssp) - 4*Power(S(ssp),3)))) + sqrt((1 + 2*ISO(iip))/((1 + ISO(iip))*(-S(ssp) + 4*Power(S(ssp),3))))))/(2.*(3 + 2*ISO(iip)))},
{ 39, 15, (Power(-1,NN)*ISO(iip))/(sqrt(2)*sqrt(ISO(iip)*(1 + ISO(iip))))},
{ 39, 56, -(1/sqrt(2))},
{ 40, 16, Power(-1,NN)/sqrt(1 + 1/(1 + 2*ISO(iip)))},
{ 41, 18, Power(-1,NN)/(2.*sqrt(6)*sqrt(((1 + ISO(iip))*S(ssp))/(ISO(iip) + 2*ISO(iip)*S(ssp))))},
{ 41, 59, sqrt(3 + 3/(2.*S(ssp)))/2.},
{ 42, 19, (Power(-1,NN)*sqrt(1 + 2*S(ssp))*(2*sqrt(((1 + ISO(iip))*(1 + 2*ISO(iip)))/S(ssp)) + sqrt((1 + 2*ISO(iip))/(S(ssp) + ISO(iip)*S(ssp)))))/(2.*sqrt(6)*(3 + 2*ISO(iip)))},
{ 43, 61, sqrt(1 + 1/(2.*S(ssp)))},
{ 45, 18, Power(-1,NN)/(2.*sqrt(2)*sqrt(((1 + ISO(iip))*S(ssp))/(ISO(iip) + 2*ISO(iip)*S(ssp))))},
{ 45, 59, -0.5*sqrt(2 + 1/S(ssp))/sqrt(2)},
{ 46, 19, (Power(-1,NN)*sqrt(0.5 + S(ssp))*(2*sqrt(((1 + ISO(iip))*(1 + 2*ISO(iip)))/S(ssp)) + sqrt((1 + 2*ISO(iip))/(S(ssp) + ISO(iip)*S(ssp)))))/(2.*(3 + 2*ISO(iip)))},
{ 47, 6, Power(-1,NN)/(2.*sqrt(2)*sqrt(((1 + ISO(iip))*S(ssp))/(ISO(iip) + 2*ISO(iip)*S(ssp))))},
{ 47, 57, -0.5*sqrt(2 + 1/S(ssp))/sqrt(2)},
{ 48, 7, (Power(-1,NN)*sqrt(0.5 + S(ssp))*(2*sqrt(((1 + ISO(iip))*(1 + 2*ISO(iip)))/S(ssp)) + sqrt((1 + 2*ISO(iip))/(S(ssp) + ISO(iip)*S(ssp)))))/(2.*(3 + 2*ISO(iip)))},
{ 49, 12, Power(-1,NN)/(2.*sqrt(2)*sqrt(((1 + ISO(iip))*S(ssp))/(ISO(iip) + 2*ISO(iip)*S(ssp))))},
{ 49, 55, -0.5*sqrt(2 + 1/S(ssp))/sqrt(2)},
{ 50, 13, (Power(-1,NN)*sqrt(0.5 + S(ssp))*(2*sqrt(((1 + ISO(iip))*(1 + 2*ISO(iip)))/S(ssp)) + sqrt((1 + 2*ISO(iip))/(S(ssp) + ISO(iip)*S(ssp)))))/(2.*(3 + 2*ISO(iip)))},
{ 52, 24, (Power(-1,NN)*sqrt(((1 + 2*ISO(iip))*(-1 + S(ssp)))/((1 + ISO(iip))*S(ssp))))/sqrt(6)},
{ 53, 26, (Power(-1,-4*ISO(iip) + NN)*(-1 + 2*S(ssp)))/(sqrt(6)*sqrt(((1 + ISO(iip))*S(ssp)*(-1 + 2*S(ssp)))/(1 + 2*ISO(iip))))},
{ 54, 28, (Power(-1,-4*ISO(iip) + NN)*(sqrt(((1 + 2*ISO(iip))*S(ssp)*(1 + S(ssp))*(1 + 2*S(ssp)))/(3 + 2*S(ssp))) + sqrt(((1 + 2*ISO(iip))*S(ssp)*(1 + 2*S(ssp)))/(3 + 5*S(ssp) + 2*Power(S(ssp),2))) + sqrt(((1 + 2*ISO(iip))*S(ssp))/(3 + 11*S(ssp) + 12*Power(S(ssp),2) + 4*Power(S(ssp),3)))))/(sqrt(2)*sqrt(((1 + ISO(iip))*S(ssp)*(1 + S(ssp))*(3 + 2*S(ssp)))/(1 + 2*S(ssp))))},
{ 55, 36, (Power(-1,NN)*sqrt((1 + 2*ISO(iip) + 2*S(ssp) + 4*ISO(iip)*S(ssp))/(2*S(ssp) + 2*ISO(iip)*S(ssp))))/2.},
{ 56, 38, (Power(-1,-4*ISO(iip) + NN)*(1 + S(ssp)))/(2.*sqrt(2)*sqrt(((1 + ISO(iip))*S(ssp)*(1 + S(ssp)))/(1 + 2*ISO(iip))))},
{ 56, 50, -0.5*(Power(-1,NN)*sqrt(1 - 1/(2.*(1 + ISO(iip)))))},
{ 57, 30, (Power(-1,NN)*sqrt((1 + 2*ISO(iip) + 2*S(ssp) + 4*ISO(iip)*S(ssp))/(2*S(ssp) + 2*ISO(iip)*S(ssp))))/2.},
{ 58, 32, (Power(-1,-4*ISO(iip) + NN)*(1 + S(ssp)))/(2.*sqrt(2)*sqrt(((1 + ISO(iip))*S(ssp)*(1 + S(ssp)))/(1 + 2*ISO(iip))))},
{ 58, 48, -0.5*(Power(-1,NN)*sqrt(1 - 1/(2.*(1 + ISO(iip)))))},
{ 60, 42, (Power(-1,NN)*sqrt(3 - 3/(2.*(1 + ISO(iip)))))/2.},
{ 60, 46, -0.5*(Power(-1,NN)*sqrt(1 - 1/(2.*(1 + ISO(iip)))))},
{ 62, 44, Power(-1,NN)*sqrt(1 - 1/(2.*(1 + ISO(iip))))},
{ 63, 24, Power(-1,NN)*sqrt((1 + 2*ISO(iip) + 2*S(ssp) + 4*ISO(iip)*S(ssp))/(6*S(ssp) + 6*ISO(iip)*S(ssp)))},
{ 64, 26, (Power(-1,-4*ISO(iip) + NN)*(1 + S(ssp)))/(sqrt(6)*sqrt(((1 + ISO(iip))*S(ssp)*(1 + S(ssp)))/(1 + 2*ISO(iip))))},
