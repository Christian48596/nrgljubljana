{ 1, 5, sqrt(1 + 1/(2.*S(ssp)))},
{ 2, 6, (3 + 2*ISO(iip))/(sqrt(6)*sqrt(((1 + ISO(iip))*(3 + 2*ISO(iip))*S(ssp))/(1 + 2*S(ssp))))},
{ 3, 7, (2 + ISO(iip))/(sqrt(6)*sqrt(((1 + ISO(iip))*(2 + ISO(iip))*S(ssp))/(1 + 2*S(ssp))))},
{ 8, 2, (Power(-1,NN)*sqrt(-1 + ISO(iip) + 2*Power(ISO(iip),2)))/(sqrt(6)*(1 + ISO(iip)))},
{ 8, 41, sqrt(0.6666666666666666)},
{ 9, 3, (Power(-1,NN)*sqrt(0.6666666666666666)*ISO(iip))/sqrt(ISO(iip)*(1 + ISO(iip)))},
{ 9, 42, sqrt((3 + 2*ISO(iip))/(6 + 6*ISO(iip)))},
{ 10, 4, (Power(-1,NN)*(5*sqrt((1 + ISO(iip))*(1 + 2*ISO(iip))*S(ssp)) + 2*ISO(iip)*sqrt((1 + ISO(iip))*(1 + 2*ISO(iip))*S(ssp)) + sqrt((S(ssp) + 2*ISO(iip)*S(ssp))/(1 + ISO(iip)))))/(sqrt(2)*(2 + ISO(iip))*(3 + 2*ISO(iip))*sqrt(S(ssp)))},
{ 11, 23, -(sqrt(2 + 1/S(ssp))/sqrt(2))},
{ 12, 24, (-3 - 2*ISO(iip))/(2.*sqrt(2)*sqrt(((1 + ISO(iip))*(3 + 2*ISO(iip))*S(ssp))/(1 + 2*S(ssp))))},
{ 14, 25, -(sqrt(1 + 1/S(ssp))/sqrt(2))},
{ 14, 43, -(1/sqrt(2))},
{ 15, 26, -0.5*sqrt(((1 + ISO(iip))*(3 + 2*ISO(iip))*(1 + S(ssp)))/S(ssp))/(sqrt(2)*(1 + ISO(iip)))},
{ 15, 44, (-3 - 2*ISO(iip))/(2.*sqrt(6 + 10*ISO(iip) + 4*Power(ISO(iip),2)))},
{ 17, 29, -(sqrt(2 + 1/S(ssp))/sqrt(2))},
{ 18, 30, (-3 - 2*ISO(iip))/(2.*sqrt(2)*sqrt(((1 + ISO(iip))*(3 + 2*ISO(iip))*S(ssp))/(1 + 2*S(ssp))))},
{ 20, 31, -(sqrt(1 + 1/S(ssp))/sqrt(2))},
{ 20, 47, -(1/sqrt(2))},
{ 21, 32, -0.5*sqrt(((1 + ISO(iip))*(3 + 2*ISO(iip))*(1 + S(ssp)))/S(ssp))/(sqrt(2)*(1 + ISO(iip)))},
{ 21, 48, (-3 - 2*ISO(iip))/(2.*sqrt(6 + 10*ISO(iip) + 4*Power(ISO(iip),2)))},
{ 25, 12, (Power(-1,NN)*(ISO(iip) - 2*ISO(iip)*S(ssp)))/(2.*sqrt(2)*sqrt(ISO(iip)*(1 + ISO(iip))*S(ssp)*(-1 + 2*S(ssp))))},
{ 25, 55, -0.5*sqrt(1 - 1/(2.*S(ssp)))},
{ 26, 13, -0.5*(Power(-1,NN)*sqrt(0.5 + S(ssp))*(-1 + 2*S(ssp))*(2*sqrt(-(((1 + ISO(iip))*(1 + 2*ISO(iip)))/(S(ssp) - 4*Power(S(ssp),3)))) + sqrt((1 + 2*ISO(iip))/((1 + ISO(iip))*(-S(ssp) + 4*Power(S(ssp),3))))))/(3 + 2*ISO(iip))},
{ 27, 15, -((Power(-1,NN)*ISO(iip))/(sqrt(2)*sqrt(ISO(iip)*(1 + ISO(iip)))))},
{ 27, 56, -(1/sqrt(2))},
{ 28, 16, -(Power(-1,NN)/sqrt(1 + 1/(1 + 2*ISO(iip))))},
{ 31, 18, (Power(-1,NN)*(ISO(iip) - 2*ISO(iip)*S(ssp)))/(2.*sqrt(2)*sqrt(ISO(iip)*(1 + ISO(iip))*S(ssp)*(-1 + 2*S(ssp))))},
{ 31, 59, -0.5*sqrt(1 - 1/(2.*S(ssp)))},
{ 32, 19, -0.5*(Power(-1,NN)*sqrt(0.5 + S(ssp))*(-1 + 2*S(ssp))*(2*sqrt(-(((1 + ISO(iip))*(1 + 2*ISO(iip)))/(S(ssp) - 4*Power(S(ssp),3)))) + sqrt((1 + 2*ISO(iip))/((1 + ISO(iip))*(-S(ssp) + 4*Power(S(ssp),3))))))/(3 + 2*ISO(iip))},
{ 33, 21, -((Power(-1,NN)*ISO(iip))/(sqrt(2)*sqrt(ISO(iip)*(1 + ISO(iip)))))},
{ 33, 60, -(1/sqrt(2))},
{ 34, 22, -(Power(-1,NN)/sqrt(1 + 1/(1 + 2*ISO(iip))))},
{ 35, 51, sqrt(1 + 1/(2.*S(ssp)))},
{ 37, 52, sqrt(0.6666666666666666)*sqrt(1 + 1/S(ssp))},
{ 37, 61, sqrt(1 - 1/(2.*S(ssp)))/2.},
{ 37, 63, sqrt(2 - 1/S(ssp))/(2.*sqrt(6))},
{ 39, 53, sqrt(0.3333333333333333 + 1/(2.*S(ssp)))},
{ 39, 62, 1/sqrt(2)},
{ 39, 64, 1/sqrt(6)},
{ 41, 6, -((Power(-1,-4*ISO(iip) + NN)*ISO(iip))/(sqrt(6)*sqrt((ISO(iip)*(1 + ISO(iip))*S(ssp))/(1 + 2*S(ssp)))))},
{ 42, 7, -((Power(-1,NN)*sqrt(1 + 2*S(ssp))*(2*sqrt(((1 + ISO(iip))*(1 + 2*ISO(iip)))/S(ssp)) + sqrt((1 + 2*ISO(iip))/(S(ssp) + ISO(iip)*S(ssp)))))/(sqrt(6)*(3 + 2*ISO(iip))))},
{ 43, 12, Power(-1,NN)/(2.*sqrt(2)*sqrt(((1 + ISO(iip))*S(ssp))/(ISO(iip) + 2*ISO(iip)*S(ssp))))},
{ 43, 55, sqrt(1 + 1/(2.*S(ssp)))/2.},
{ 44, 13, (Power(-1,NN)*sqrt(0.5 + S(ssp))*(2*sqrt(((1 + ISO(iip))*(1 + 2*ISO(iip)))/S(ssp)) + sqrt((1 + 2*ISO(iip))/(S(ssp) + ISO(iip)*S(ssp)))))/(2.*(3 + 2*ISO(iip)))},
{ 45, 57, sqrt(1 + 1/(2.*S(ssp)))},
{ 47, 18, Power(-1,NN)/(2.*sqrt(2)*sqrt(((1 + ISO(iip))*S(ssp))/(ISO(iip) + 2*ISO(iip)*S(ssp))))},
{ 47, 59, sqrt(1 + 1/(2.*S(ssp)))/2.},
{ 48, 19, (Power(-1,NN)*sqrt(0.5 + S(ssp))*(2*sqrt(((1 + ISO(iip))*(1 + 2*ISO(iip)))/S(ssp)) + sqrt((1 + 2*ISO(iip))/(S(ssp) + ISO(iip)*S(ssp)))))/(2.*(3 + 2*ISO(iip)))},
{ 49, 61, -0.5*sqrt(2 + 1/S(ssp))/sqrt(2)},
{ 49, 63, sqrt(3 + 3/(2.*S(ssp)))/2.},
{ 52, 36, (Power(-1,NN)*sqrt(((1 + 2*ISO(iip))*(-1 + S(ssp)))/((1 + ISO(iip))*S(ssp))))/sqrt(6)},
{ 53, 38, (Power(-1,-4*ISO(iip) + NN)*(-1 + 2*S(ssp)))/(sqrt(6)*sqrt(((1 + ISO(iip))*S(ssp)*(-1 + 2*S(ssp)))/(1 + 2*ISO(iip))))},
{ 54, 40, (Power(-1,-4*ISO(iip) + NN)*(sqrt(((1 + 2*ISO(iip))*S(ssp)*(1 + S(ssp))*(1 + 2*S(ssp)))/(3 + 2*S(ssp))) + sqrt(((1 + 2*ISO(iip))*S(ssp)*(1 + 2*S(ssp)))/(3 + 5*S(ssp) + 2*Power(S(ssp),2))) + sqrt(((1 + 2*ISO(iip))*S(ssp))/(3 + 11*S(ssp) + 12*Power(S(ssp),2) + 4*Power(S(ssp),3)))))/(sqrt(2)*sqrt(((1 + ISO(iip))*S(ssp)*(1 + S(ssp))*(3 + 2*S(ssp)))/(1 + 2*S(ssp))))},
{ 55, 24, (Power(-1,NN)*sqrt((1 + 2*ISO(iip) + 2*S(ssp) + 4*ISO(iip)*S(ssp))/(2*S(ssp) + 2*ISO(iip)*S(ssp))))/2.},
{ 56, 26, (Power(-1,-4*ISO(iip) + NN)*(1 + S(ssp)))/(2.*sqrt(2)*sqrt(((1 + ISO(iip))*S(ssp)*(1 + S(ssp)))/(1 + 2*ISO(iip))))},
{ 56, 44, (Power(-1,NN)*sqrt(1 - 1/(2.*(1 + ISO(iip)))))/2.},
{ 58, 46, Power(-1,NN)*sqrt(1 - 1/(2.*(1 + ISO(iip))))},
{ 59, 30, (Power(-1,NN)*sqrt((1 + 2*ISO(iip) + 2*S(ssp) + 4*ISO(iip)*S(ssp))/(2*S(ssp) + 2*ISO(iip)*S(ssp))))/2.},
{ 60, 32, (Power(-1,-4*ISO(iip) + NN)*(1 + S(ssp)))/(2.*sqrt(2)*sqrt(((1 + ISO(iip))*S(ssp)*(1 + S(ssp)))/(1 + 2*ISO(iip))))},
{ 60, 48, (Power(-1,NN)*sqrt(1 - 1/(2.*(1 + ISO(iip)))))/2.},
{ 61, 36, -0.5*(Power(-1,NN)*sqrt((1 + 2*ISO(iip) + 2*S(ssp) + 4*ISO(iip)*S(ssp))/(2*S(ssp) + 2*ISO(iip)*S(ssp))))},
{ 62, 38, -0.5*(Power(-1,-4*ISO(iip) + NN)*(1 + S(ssp)))/(sqrt(2)*sqrt(((1 + ISO(iip))*S(ssp)*(1 + S(ssp)))/(1 + 2*ISO(iip))))},
{ 62, 50, -0.5*(Power(-1,NN)*sqrt(1 - 1/(2.*(1 + ISO(iip)))))},
{ 63, 36, -0.5*(Power(-1,NN)*sqrt((1 + 2*ISO(iip) + 2*S(ssp) + 4*ISO(iip)*S(ssp))/(6*S(ssp) + 6*ISO(iip)*S(ssp))))},
{ 64, 38, -0.5*(Power(-1,-4*ISO(iip) + NN)*(1 + S(ssp)))/(sqrt(6)*sqrt(((1 + ISO(iip))*S(ssp)*(1 + S(ssp)))/(1 + 2*ISO(iip))))},
{ 64, 50, (Power(-1,NN)*sqrt(3 - 3/(2.*(1 + ISO(iip)))))/2.},
